{% set component_name = "msgs" %}
{% set repo_name = "gz-" + component_name %}
{% set version = "11.0.2" %}
{% set major_version = version.split('.')[0] %}
{% set name = repo_name + major_version %}
{% set component_version = component_name + major_version %}
{% set cxx_name = "lib" + name %}
{% set python_name = name + "-python" %}
{% set protobuf_version = "5.29.3" %}
{% set protobuf_major_version = protobuf_version.split('.')[0] %}
{% set next_protobuf_major_version = "6" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/gazebosim/{{ repo_name }}/archive/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz
    sha256: db893c7ae6587de510d3111ca2fd2fcb9e4af5bba248529232c38cfd8b1f1ef4
    patches:
      - win_enable_py_tests.patch

build:
  number: 2
  skip: true  # [not is_python_min]

outputs:
  - name: {{ cxx_name }}
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - ninja
        - cmake
        - pkg-config
        - python {{ python_min }}
        # We need all host deps also in build for cross-compiling
        - libgz-cmake4  # [build_platform != target_platform]
        - libgz-math8  # [build_platform != target_platform]
        - libgz-tools2  # [build_platform != target_platform]
        - tinyxml2  # [build_platform != target_platform]
        - libabseil  # [build_platform != target_platform]
        - libprotobuf  # [build_platform != target_platform]
      host:
        - libgz-cmake4
        - libgz-utils3
        - libgz-math8
        - libgz-tools2
        - tinyxml2
        - libabseil
        - libprotobuf
        - dlfcn-win32  # [win]
      run:
        - python
    test:
      commands:
        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]
        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]
        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]
        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\gz\\{{ component_version }}\\gz\\{{ component_name }}.hh exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\{{ name }}\\{{ name }}-config.cmake exit 1  # [win]

  - name: {{ python_name }}
    build:
      noarch: python
      string: protobuf{{ protobuf_major_version }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - ninja
        - cmake
        - pkg-config
        - python {{ python_min }}
        # We need all host deps also in build for cross-compiling
        - libgz-math8  # [build_platform != target_platform]
        - libgz-tools2  # [build_platform != target_platform]
        - tinyxml2  # [build_platform != target_platform]
        - libabseil  # [build_platform != target_platform]
        - libprotobuf  # [build_platform != target_platform]
      host:
        - libgz-math8
        - libgz-tools2
        - tinyxml2
        - libabseil
        - libprotobuf
        - python {{ python_min }}
        - protobuf {{ protobuf_version }}
        - pytest
        - dlfcn-win32  # [win]
      run:
        - python  >={{ python_min }}
        # See https://protobuf.dev/support/cross-version-runtime-guarantee/
        - protobuf >={{ protobuf_version }},<{{ next_protobuf_major_version }}.0a0
    test:
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - gz.msgs11

  - name: {{ name }}
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
    requirements:
      host:
        # Manually ensure that libabseil and libprotobuf end up in the hash
        - libabseil
        - libprotobuf
      run:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - {{ pin_subpackage(python_name, max_pin='x.x.x') }}
    test:
      commands:
        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]
        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]
        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]
        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\gz\\{{ component_version }}\\gz\\{{ component_name }}.hh exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\{{ name }}\\{{ name }}-config.cmake exit 1  # [win]
      requires:
        - pip
      imports:
        - gz.msgs11

about:
  home: https://github.com/gazebosim/{{ repo_name }}
  license: Apache-2.0
  license_file: LICENSE
  summary: Messages for Gazebo robot simulation.

extra:
  feedstock-name: {{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - j-rivero
    - Tobias-Fischer
