From d40a689e6cd5da64af25990ae58d309f8f53562c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=98ystein=20Sture?= <oysstu@users.noreply.github.com>
Date: Fri, 28 Mar 2025 20:41:51 +0100
Subject: [PATCH] Fix compatibility with protobuf v30 (cpp 6.30.0) (#499)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Ã˜ystein Sture <os@skarvtech.com>
(cherry picked from commit 546846e27a16f072a2f564a5b94df8159265a49e)
---
 core/generator/Generator.cc | 32 ++++++++++++++++++--------------
 1 file changed, 18 insertions(+), 14 deletions(-)

diff --git a/core/generator/Generator.cc b/core/generator/Generator.cc
index 9c835242..d996aa7a 100644
--- a/core/generator/Generator.cc
+++ b/core/generator/Generator.cc
@@ -129,7 +129,11 @@ bool Generator::Generate(const FileDescriptor *_file,
 #include <$detail_header$>
 )");
 
+#if GOOGLE_PROTOBUF_VERSION >= 6030000
+    auto ns = getNamespaces(std::string(_file->package()));
+#else
     auto ns = getNamespaces(_file->package());
+#endif
 
     for (const auto &name : ns)
         printer.PrintRaw("namespace " + name + " {\n");
@@ -137,32 +141,32 @@ bool Generator::Generate(const FileDescriptor *_file,
     for (auto i = 0; i < _file->message_type_count(); ++i)
     {
       const auto *desc = _file->message_type(i);
-      std::string ptrTypes;
+      std::stringstream ptrTypes;
 
       indexPrinter.PrintRaw(desc->name());
       indexPrinter.PrintRaw("\n");
 
       // Define std::unique_ptr types for our messages
-      ptrTypes += "typedef std::unique_ptr<"
-        + desc->name() + "> "
-        + desc->name() + "UniquePtr;\n";
+      ptrTypes << "typedef std::unique_ptr<"
+        << desc->name() << "> "
+        << desc->name() << "UniquePtr;\n";
 
       // Define const std::unique_ptr types for our messages
-      ptrTypes += "typedef std::unique_ptr<const "
-        + desc->name() + "> Const"
-        + desc->name() + "UniquePtr;\n";
+      ptrTypes << "typedef std::unique_ptr<const "
+        << desc->name() << "> Const"
+        << desc->name() << "UniquePtr;\n";
 
       // Define std::shared_ptr types for our messages
-      ptrTypes += "typedef std::shared_ptr<"
-        + desc->name() + "> "
-        + desc->name() + "SharedPtr;\n";
+      ptrTypes << "typedef std::shared_ptr<"
+        << desc->name() << "> "
+        << desc->name() << "SharedPtr;\n";
 
       // Define const std::shared_ptr types for our messages
-      ptrTypes += "typedef std::shared_ptr<const "
-        + desc->name() + "> Const"
-        + desc->name() + "SharedPtr;\n";
+      ptrTypes << "typedef std::shared_ptr<const "
+        << desc->name() << "> Const"
+        << desc->name() << "SharedPtr;\n";
 
-      printer.PrintRaw(ptrTypes.c_str());
+      printer.PrintRaw(ptrTypes.str());
     }
 
     for (auto name = ns.rbegin(); name != ns.rend(); name++)
